import{_ as b,r as o,c as i,a as f,e,b as x,t as d,f as a,F as E,g as C,o as u,S as T}from"./index-CWlCYwLL.js";const w={class:"d-flex flex-container"},y={class:"flex-fill p-4 content html7-pad"},S={__name:"Html7",setup(k){const r=o("Original Content"),l=o([]),s=o(""),p=()=>{r.value="Content Changed!"},m=()=>{l.value.push("New Paragraph Added!")},g=()=>{l.value.pop()},c=n=>{n.preventDefault();const t=n.target.elements.inputText.value;s.value=`Submitted Text: ${t}`,n.target.reset()};return(n,t)=>(u(),i("div",w,[f(T),e("div",y,[t[1]||(t[1]=x(`<h1 data-v-4fca2b66>7. Document Object Model (DOM)</h1><hr data-v-4fca2b66><h2 data-v-4fca2b66>1. DOM Structure</h2><p data-v-4fca2b66>Understanding elements as objects:</p><pre data-v-4fca2b66>&lt;div id=&quot;myDiv&quot;&gt;Hello, World!&lt;/div&gt;</pre><p data-v-4fca2b66>Explanation: This example retrieves a <code data-v-4fca2b66>&lt;div&gt;</code> element and logs it to the console, showing that it is an object that can be manipulated.</p><h2 data-v-4fca2b66>2. Traversing the DOM</h2><p data-v-4fca2b66>Parent, Child, and Sibling Elements:</p><pre data-v-4fca2b66>&lt;div id=&quot;parent&quot;&gt;
  &lt;p id=&quot;child&quot;&gt;Child Paragraph&lt;/p&gt;
  &lt;p id=&quot;sibling&quot;&gt;Sibling Paragraph&lt;/p&gt;
&lt;/div&gt;</pre><p data-v-4fca2b66>Explanation: This code finds the parent of the child element and its next sibling, demonstrating how to traverse the DOM.</p><h2 data-v-4fca2b66>3. Manipulating the DOM</h2><h3 data-v-4fca2b66>Changing Content</h3>`,12)),e("button",{onClick:p},"Change Content"),e("p",null,d(r.value),1),t[2]||(t[2]=e("pre",null,`document.getElementById('changeContent').onclick = function() {
  document.getElementById('text').textContent = 'Content Changed!';
};`,-1)),t[3]||(t[3]=e("p",null,[a("Explanation: Clicking the button updates the paragraph text, showcasing how to use "),e("code",null,"textContent"),a(" to change content.")],-1)),t[4]||(t[4]=e("h3",null,"Adding or Removing Elements",-1)),e("button",{onClick:m},"Add Element"),e("button",{onClick:g},"Remove Last Element"),e("div",null,[(u(!0),i(E,null,C(l.value,(v,h)=>(u(),i("div",{key:h},[e("p",null,d(v),1)]))),128))]),t[5]||(t[5]=e("pre",null,`document.getElementById('addElement').onclick = function() {
  const newElement = document.createElement('p');
  newElement.textContent = 'New Paragraph';
  document.getElementById('container').appendChild(newElement);
};`,-1)),t[6]||(t[6]=e("p",null,"Explanation: This code adds a new paragraph when the button is clicked and removes the last added paragraph.",-1)),t[7]||(t[7]=e("h3",null,"Handling Events",-1)),e("form",{onSubmit:c},t[0]||(t[0]=[e("label",{for:"inputText"},"Enter Text:",-1),e("input",{type:"text",id:"inputText",required:""},null,-1),e("button",{type:"submit"},"Submit",-1)]),32),e("p",null,d(s.value),1),t[8]||(t[8]=e("pre",null,`document.getElementById('myForm').onsubmit = function(event) {
  event.preventDefault(); // Prevent form submission
  const inputText = document.getElementById('inputText').value;
  document.getElementById('formOutput').innerText = \\\`Submitted Text: \\\${inputText}\\\`;
};`,-1)),t[9]||(t[9]=e("p",null,[a("Explanation: This form captures user input and displays it below without refreshing the page, demonstrating event handling with "),e("code",null,"onsubmit"),a(".")],-1))])]))}},D=b(S,[["__scopeId","data-v-4fca2b66"]]);export{D as default};
